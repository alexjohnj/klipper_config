[include macro_defs.cfg]

[respond]

################################################################################
# Print Lifecycle
################################################################################

[gcode_macro PRINT_START]
gcode:
    {% set BED_TEMP = params.BED_TEMP|default(60)|float %}
    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(190)|float %}
    {% set MESH_NAME = params.MESH_NAME %}

    CLEAR_PAUSE
    UPDATE_DELAYED_GCODE ID=_TURN_OFF_BED_HEATER DURATION=0
    UPDATE_DELAYED_GCODE ID=_TURN_OFF_AIR_FILTER DURATION=0

    M117 Heating bed
    _STATUS_HOOK_PREHEATING

    _SET_EXTRUDER_TEMP TEMP={150} # Start warming the nozzle but don't let it ooze.

    {% if BED_TEMP >= 90 %}
        _SET_AIR_FILTER_FAN_SPEED SPEED=0.4
    {% endif %}

    _SET_BED_TEMP_BLOCKING TEMP={BED_TEMP}

    {% if BED_TEMP >= 90 %}
        _SET_AIR_FILTER_FAN_SPEED SPEED=1
    {% endif %}

    _STATUS_HOOK_HOMING
    HOME_IF_NEEDED

    {% if 'bed_mesh' in printer %}
       _STATUS_HOOK_BUILD_ABL_MESH
       SETUP_KAMP_MESHING DISPLAY_PARAMETERS=1 FUZZ_ENABLE=1
       BED_MESH_CLEAR
       BED_MESH_CALIBRATE
    {% endif %}

    _ABSOLUTE_MODE
    _RELATIVE_EXTRUSION
    _MOVE_TO_INTRO_LINE

    M117 Heating Extruder
    _STATUS_HOOK_HEATING

    _SET_EXTRUDER_TEMP_BLOCKING TEMP={EXTRUDER_TEMP}

    _STATUS_HOOK_PURGING
    _DRAW_INTRO_LINE

    ENABLE_FILAMENT_SENSOR # Ensure filament sensor is enabled

    _STATUS_HOOK_PRINT_STARTING
    M117 Print starting


[gcode_macro PRINT_END]
gcode:
    _WAIT_FOR_MOVES_TO_FINISH
    _RETRACT_A_LITTLE
    _MOVE_TOOLHEAD_RELATIVE X=5 Y=5 Z=1 SPEED=6000 # Move out the way to reduce stringing.

    _SET_EXTRUDER_TEMP TEMP=0
    _SET_BED_TEMP TEMP=0
    _PART_COOLING_FAN_OFF

    # Run air filter for a few minutes
    _SET_AIR_FILTER_FAN_SPEED SPEED=1
    UPDATE_DELAYED_GCODE ID=_TURN_OFF_AIR_FILTER DURATION=300

    PRESENT_PRINT
    _DISABLE_STEPPERS

    {% if 'bed_mesh' in printer %}
      BED_MESH_CLEAR # Clear bed mesh if this printer supports meshes
    {% endif %}

    _STATUS_HOOK_PRINT_FINISHED


[gcode_macro CANCEL_PRINT]
rename_existing: CANCEL_PRINT_BASE
gcode:
    # Only retract when we're not already paused.
    {% if printer.pause_resume.is_paused|int == 0 and "xyz" in printer.toolhead.homed_axes %}
       _RETRACT_A_LITTLE
       _MOVE_TOOLHEAD_RELATIVE X=5 Y=5 Z=1 SPEED=6000
    {% endif %}
    PRESENT_PRINT
    _SET_EXTRUDER_TEMP TEMP=0
    UPDATE_DELAYED_GCODE ID=_TURN_OFF_BED_HEATER DURATION=300
    _PART_COOLING_FAN_OFF
    CANCEL_PRINT_BASE
    _DISABLE_STEPPERS
    _STATUS_HOOK_PRINT_CANCELLED


[pause_resume]

[gcode_macro PAUSE]
description: Pause the current print
rename_existing: BASE_PAUSE
gcode:
    {% if printer['pause_resume'].is_paused|int == 0 %}
        # Where to park the toolhead
        {% set x_park_pos = printer.toolhead.axis_maximum.x|float - 5.0 %}
        {% set y_park_pos = printer.toolhead.axis_maximum.y|float - 5.0 %}

        # Store target temperature for the RESUME macro
        SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=etemp VALUE={printer['extruder'].target}

        DISABLE_FILAMENT_SENSOR

        BASE_PAUSE

        SAVE_GCODE_STATE NAME=BASE_PAUSE_POSITION

        {% if "xyz" in printer.toolhead.homed_axes %}
           _RETRACT_A_LITTLE
           _MOVE_TOOLHEAD_RELATIVE X=5 Y=5 Z=1 SPEED=6000 # Move out the way quickly to reduce stringing.
           _PARK_HEAD_WITH_ZHOP X={x_park_pos} Y={y_park_pos}
        {% else %}
           {action_respond_info("Not Z-Hopping --- Printer is not homed")}
        {% endif %}

        SAVE_GCODE_STATE NAME=PARKED_PAUSE_POSITION
        M104 S0 # Turn off the hotend
    {% else %}
       {action_respond_info("Already paused!")}
    {% endif %}


[gcode_macro RESUME]
rename_existing: BASE_RESUME
variable_zhop: 0
variable_etemp: 0
gcode:
    {% if printer['pause_resume'].is_paused|int == 1 %}
        ENABLE_FILAMENT_SENSOR
        {% if etemp > 0 %}
            # Restore extruder temperature when we paused
            _SET_EXTRUDER_TEMP_BLOCKING TEMP={etemp|int}
        {% endif %}
        # Move back to the parked position
        RESTORE_GCODE_STATE NAME=PARKED_PAUSE_POSITION MOVE=1 MOVE_SPEED=120
        # Then the position the BASE_PAUSE macro put is in
        RESTORE_GCODE_STATE NAME=BASE_PAUSE_POSITION MOVE=1 MOVE_SPEED=120
        # Now we can let the BASE_RESUME macro finish off.
        BASE_RESUME
    {% else %}
       {action_respond_info("Printer is not paused!")}
    {% endif %}


[delayed_gcode _TURN_OFF_AIR_FILTER]
gcode:
    _SET_AIR_FILTER_FAN_SPEED SPEED=0


################################################################################
# Filament Change
################################################################################

[gcode_macro M600]
description: Pause print for a filament change
gcode:
    {action_respond_info("Filament change requested")}
    PAUSE


[gcode_macro UNLOAD_FILAMENT]
description: Unload filament from the extruder
gcode:
  {% if printer.extruder.temperature < 180 %}
    {action_raise_error("Extruder temperature too low")}
  {% else %}
    SAVE_GCODE_STATE NAME=UNLOAD_FILAMENT_STATE

    _RELATIVE_EXTRUSION
    _ZERO_EXTRUDER

    G1 E10 F240 # Extrude a little to soften the tip
    G1 E-50 F900 # Retract to unload the filament
    G1 E-25 F900 # And some more

    DISABLE_FILAMENT_SENSOR

    RESTORE_GCODE_STATE NAME=UNLOAD_FILAMENT_STATE
  {% endif %}


[gcode_macro LOAD_FILAMENT]
description: Load filament into the extruder
gcode:
  {% if printer.extruder.temperature < 180 %}
    {action_raise_error("Extruder temperature too low")}
  {% else %}
    SAVE_GCODE_STATE NAME=LOAD_FILAMENT_STATE
    _RELATIVE_EXTRUSION
    G1 E50 F240
    G1 E25 F240
    ENABLE_FILAMENT_SENSOR
    RESTORE_GCODE_STATE NAME=LOAD_FILAMENT_STATE
  {% endif %}


################################################################################
# Positioning
################################################################################

[gcode_macro PRESENT_PRINT]
gcode:
    {% set x_pos = printer.toolhead.axis_minimum.x|float + 10.0 %}
    {% set y_pos = printer.toolhead.axis_maximum.y|float - 5.0 %}
    {% if "xyz" in printer.toolhead.homed_axes %}
        _PARK_HEAD_WITH_ZHOP X={x_pos} Y={y_pos}
    {% endif %}


[gcode_macro CENTER_NOZZLE]
gcode:
    {% set x_pos = printer.toolhead.axis_maximum.x|float %}
    {% set y_pos = printer.toolhead.axis_maximum.y|float %}
    _PARK_HEAD_WITH_ZHOP X={x_pos / 2} Y={y_pos / 2}


[gcode_macro _PARK_HEAD_WITH_ZHOP]
description: Park the toolhead at a specifix (x,y) coordinate with a relative z-hop. Will home if needed.
gcode:
    {% set x_pos_target = params.X|float %}
    {% set y_pos_target = params.Y|float %}
    {% set z_hop_target = params.Z_HOP|default(20)|float|abs %}

    {% set toolhead_min_x = printer.toolhead.axis_minimum.x|float %}
    {% set toolhead_max_x = printer.toolhead.axis_maximum.x|float %}
    {% set toolhead_min_y = printer.toolhead.axis_minimum.y|float %}
    {% set toolhead_max_y = printer.toolhead.axis_maximum.y|float %}
    {% set toolhead_max_z = printer.toolhead.axis_maximum.z|float %}

    HOME_IF_NEEDED

    {% set toolhead_z = printer.toolhead.position.z|float %}

    # Limit targets positions to the axis limits
    {% set x_pos = [x_pos_target, toolhead_max_x]|min %}
    {% set x_pos = [x_pos, toolhead_min_x]|max %}
    {% set y_pos = [y_pos_target, toolhead_max_y]|min %}
    {% set y_pos = [y_pos, toolhead_min_y]|max %}
    {% set z_pos = [toolhead_z + z_hop_target, toolhead_max_z]|min %}

    SAVE_GCODE_STATE NAME=PARK_HEAD_WITH_ZHOP_STATE
    _ABSOLUTE_MODE
    G1 Z{z_pos} F450
    G1 X{x_pos} Y{y_pos} F6000
    RESTORE_GCODE_STATE NAME=PARK_HEAD_WITH_ZHOP_STATE


[gcode_macro _MOVE_TOOLHEAD_RELATIVE]
description: Move the toolhead a relative distance, ensuring it doesn't exceed the printer's bounds.
gcode:
    {% set x_offset = params.X|default(0)|float %}
    {% set y_offset = params.Y|default(0)|float %}
    {% set z_offset = params.Z|default(0)|float %}
    {% set speed = params.SPEED|default(6000)|float %} # mm/min for consistency

    {% set toolhead_min_x = printer.toolhead.axis_minimum.x|float %}
    {% set toolhead_max_x = printer.toolhead.axis_maximum.x|float %}
    {% set toolhead_min_y = printer.toolhead.axis_minimum.y|float %}
    {% set toolhead_max_y = printer.toolhead.axis_maximum.y|float %}
    {% set toolhead_min_z = printer.toolhead.axis_minimum.z|float %}
    {% set toolhead_max_z = printer.toolhead.axis_maximum.z|float %}

    {% set toolhead_x = printer.toolhead.position.x|float %}
    {% set toolhead_y = printer.toolhead.position.y|float %}
    {% set toolhead_z = printer.toolhead.position.z|float %}

    {% set x_pos = toolhead_x + x_offset %}
    {% set y_pos = toolhead_y + y_offset %}
    {% set z_pos = toolhead_z + z_offset %}

    # Limit to the printer's bounds
    {% set x_pos = [x_pos, toolhead_max_x]|min %}
    {% set x_pos = [x_pos, toolhead_min_x]|max %}
    {% set y_pos = [y_pos, toolhead_max_y]|min %}
    {% set y_pos = [y_pos, toolhead_min_y]|max %}
    {% set z_pos = [z_pos, toolhead_max_z]|min %}
    {% set z_pos = [z_pos, toolhead_min_z]|max %}

    SAVE_GCODE_STATE NAME=_MOVE_TOOLHEAD_RELATIVE_STATE
    _ABSOLUTE_MODE
    G0 X{x_pos} Y{y_pos} Z{z_pos} F{speed}
    RESTORE_GCODE_STATE NAME=_MOVE_TOOLHEAD_RELATIVE_STATE


[gcode_macro _RETRACT_A_LITTLE]
description: Retract filament a small distance.
gcode:
    SAVE_GCODE_STATE NAME=_RETRACT_A_LITTLE_STATE
    {% set distance = params.DISTANCE|default(0.6)|float|abs %}
    _RELATIVE_EXTRUSION
    G1 E-{distance} F2100
    RESTORE_GCODE_STATE NAME=_RETRACT_A_LITTLE_STATE


################################################################################
# Helpers
#
# Basically just aliases for a single gcode command so I can remember what they
# do in a week's time.
################################################################################

[gcode_macro _ABSOLUTE_MODE]
description: Puts all axes (XYZE) in absolute positioning mode.
gcode:
    G90

[gcode_macro _RELATIVE_MODE]
description: Puts all axes (XYZE) in relative positioning mode.
gcode:
    G91

[gcode_macro _ABSOLUTE_EXTRUSION]
description: Puts the E axis into absolute positioning mode.
gcode:
    M82

[gcode_macro _RELATIVE_EXTRUSION]
description: Puts the E axis into relative mode.
gcode:
    M83

[gcode_macro HOME_IF_NEEDED]
description: Checks if the printer is homed, it not it homes the printer
gcode:
  {% if printer.toolhead.homed_axes != "xyz" %}
  G28
  {% endif %}

[gcode_macro _DISABLE_STEPPERS]
description: Disables the printers stepper motors
gcode:
  M84

[gcode_macro _PART_COOLING_FAN_OFF]
description: Turn off the part cooling fan
gcode:
    M107

[gcode_macro _HOTEND_OFF]
description: Turn off the hotend
gcode:
  M104 S0

[gcode_macro _BED_HEATER_OFF]
description: Turn off the bed heater
gcode:
    M140 S0

[gcode_macro _SET_BED_TEMP]
description: Set the target temperature for the bed.
gcode:
    {% set temperature = params.TEMP|int %}
    M140 S{temperature}

[gcode_macro _SET_BED_TEMP_BLOCKING]
description: Set the target temperature for the bed and wait for it to be reached.
gcode:
    {% set temperature = params.TEMP|int %}
    M190 S{temperature}

[gcode_macro _SET_EXTRUDER_TEMP]
description: Set the target temperature for the extruder.
gcode:
    {% set temperature = params.TEMP|int %}
    M104 S{temperature}

[gcode_macro _SET_EXTRUDER_TEMP_BLOCKING]
description: Set the extruder target temperature and wait for it to be reached.
gcode:
    {% set temperature = params.TEMP|int %}
    M109 S{temperature}

[gcode_macro _ZERO_EXTRUDER]
description: Resets the 0 point of the extruder.
gcode:
    G92 E0

[gcode_macro _WAIT_FOR_MOVES_TO_FINISH]
description: Blocks until all queued moves have finished.
gcode:
    M400

[delayed_gcode _TURN_OFF_BED_HEATER]
gcode:
    _SET_BED_TEMP TEMP=0

[include active_printer/macros.cfg]
